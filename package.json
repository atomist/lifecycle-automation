{
  "name": "@atomist/lifecycle-automation",
  "description": "Atomist Rugs displaying development and operations lifecycle messages in chat",
  "version": "0.1.3",
  "author": "Atomist",
  "license": "GPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/atomist/lifecycle-automation.git"
  },
  "homepage": "https://github.com/atomist/lifecycle-automation#readme",
  "bugs": {
    "url": "https://githubg.com/atomist/lifecycle-automation/issues"
  },
  "keywords": [
    "atomist",
    "github",
    "java",
    "kubernetes",
    "rug",
    "spring",
    "spring-boot",
    "travis-ci"
  ],
  "dependencies": {
    "@atomist/automation-client": "https://atomist.jfrog.io/atomist/npm-dev/@atomist/automation-client/-/@atomist/automation-client-0.1.44-20171012223620.tgz",
    "@atomist/slack-messages": "^0.12.0",
    "async-exit-hook": "^2.0.1",
    "base64-js": "^1.2.1",
    "cf-nodejs-client": "^0.13.0",
    "cfenv": "^1.0.4",
    "deepmerge": "^2.0.0",
    "format-date": "^1.0.0",
    "github": "^11.0.0",
    "lodash": "^4.17.4",
    "logzio-nodejs": "^0.4.4",
    "promise-each": "^2.2.0",
    "shortid": "^2.2.8",
    "winston-logzio": "^1.0.3"
  },
  "devDependencies": {
    "@types/async": "2.0.44",
    "@types/mocha": "^2.2.41",
    "@types/power-assert": "^1.4.29",
    "espower-typescript": "^8.0.2",
    "graphql-code-generator": "^0.8.13",
    "mocha": "^4.0.1",
    "nodemon": "^1.12.1",
    "npm-run-all": "^4.1.1",
    "power-assert": "^1.4.4",
    "supervisor": "^0.12.0",
    "ts-node": "^3.3.0",
    "tslint": "^5.4.3",
    "typescript": "2.5.3"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "git:info": "$(npm bin)/git-info",
    "autotest": "supervisor -q -n exit -e ts -x npm -- run test",
    "clean": "rm -f *-v8.log; rm -f profile.txt; rm -rf build; rm -rf target",
    "gql:gen": "gql-gen --file node_modules/@atomist/automation-client/graph/schema.cortex.json --template typescript -m --out ./src/typings/ \"./graphql/**/*.graphql\"",
    "compile": "npm run git:info && tsc -p .",
    "fmt": "tsfmt --replace",
    "lint": "tslint '**/*.ts' --exclude 'node_modules/**' --exclude 'build/**' -t verbose",
    "lint-fix": "tslint --fix '**/*.ts' --exclude 'node_modules/**' --exclude 'build/**' -t verbose",
    "testone": "mocha --require espower-typescript/guess \"test/**/${TEST:-*.ts}\"",
    "test": "mocha --require espower-typescript/guess \"test/**/*.ts\"",
    "benchmark": "mocha --prof --compilers ts:espower-typescript/guess \"test/**/*Benchmark.ts\"; node --prof-process isolate-* > profile.txt",
    "start": "npm run compile && $(npm bin)/atomist-client --open=true",
    "autostart": "npm-run-all --parallel watch:build watch:server --print-label",
    "debug": "npm run compile && node $NODE_DEBUG_OPTION --trace-warnings node_modules/@atomist/automation-client/start.client.js",
    "watch:build": "tsc --watch",
    "watch:server": "nodemon node_modules/@atomist/automation-client/start.client.js --watch './build'",
    "cf:push": "npm run clean && npm run compile && cf target -s production && cf bgd lifecycle-automation && cf stop lifecycle-automation-old && cf apps",
    "cf:push-staging": "npm run clean && npm run compile && cf target -s development && cf bgd lifecycle-automation-staging -f manifest-staging.yml && cf stop lifecycle-automation-staging-old && cf apps"
  },
  "engines": {
    "node": "8.5.x",
    "npm": "5.3.x"
  },
  "atomist": {
    "requires": "[1.0.0-m.7,2.0.0)",
    "dependencies": {},
    "extensions": {
      "com.atomist.rug:rug-function-http": "[0.8.0,1.0.0)"
    }
  }
}
